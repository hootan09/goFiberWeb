definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Users:
    properties:
      active:
        description: |-
          Expire     time.Time `json:"expire"`
          Created_at time.Time `json:"created_at"`
          Updated_at time.Time `json:"updated_at"`
          Teraffic   int       `json:"teraffic"`
          Uuid       uuid.UUID `json:"uuid"`
        type: boolean
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
info:
  contact:
    email: your@mail.com
    name: API Support
  description: This is an auto-generated API Docs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API
  version: "1.0"
paths:
  /api/v1/restricted:
    get:
      consumes:
      - application/json
      description: Get username from token.
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: get username from token
      tags:
      - Users
  /api/v1/token/new:
    post:
      consumes:
      - application/json
      description: Create a new access token.
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: create a new access token
      tags:
      - Token
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Active
        in: body
        name: active
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
      security:
      - ApiKeyAuth: []
      summary: create a new user
      tags:
      - Users
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get all exists users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Users'
            type: array
      summary: get all exists users
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization(Bearer)
    type: apiKey
swagger: "2.0"
